{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IUser": {
				"properties": {
					"id": {
						"type": "string"
					},
					"creationDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					},
					"email": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"creationDate",
					"updateDate",
					"email",
					"username",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_IUser.email-or-username-or-description_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"username",
					"description"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"CreateIUserProps": {
				"$ref": "#/components/schemas/Pick_IUser.email-or-username-or-description_"
			},
			"IGroup": {
				"properties": {
					"id": {
						"type": "string"
					},
					"creationDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"admins": {
						"items": {
							"$ref": "#/components/schemas/IUser"
						},
						"type": "array"
					},
					"members": {
						"items": {
							"$ref": "#/components/schemas/IUser"
						},
						"type": "array"
					}
				},
				"required": [
					"id",
					"creationDate",
					"updateDate",
					"name",
					"admins",
					"members"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IChannel": {
				"properties": {
					"id": {
						"type": "string"
					},
					"creationDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"creators": {
						"items": {
							"$ref": "#/components/schemas/IUser"
						},
						"type": "array"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"creationDate",
					"updateDate",
					"name",
					"creators",
					"description"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPublisherReferenceType": {
				"enum": [
					0,
					1,
					2
				],
				"type": "number"
			},
			"IPublisher": {
				"properties": {
					"id": {
						"type": "string"
					},
					"creationDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					},
					"userReference": {
						"allOf": [
							{
								"$ref": "#/components/schemas/IUser"
							}
						],
						"nullable": true
					},
					"groupReference": {
						"allOf": [
							{
								"$ref": "#/components/schemas/IGroup"
							}
						],
						"nullable": true
					},
					"channelReference": {
						"allOf": [
							{
								"$ref": "#/components/schemas/IChannel"
							}
						],
						"nullable": true
					},
					"referenceType": {
						"$ref": "#/components/schemas/IPublisherReferenceType"
					}
				},
				"required": [
					"id",
					"creationDate",
					"updateDate",
					"userReference",
					"groupReference",
					"channelReference",
					"referenceType"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISubscription": {
				"properties": {
					"id": {
						"type": "string"
					},
					"creationDate": {
						"type": "string",
						"format": "date-time"
					},
					"updateDate": {
						"type": "string",
						"format": "date-time"
					},
					"user": {
						"$ref": "#/components/schemas/IUser"
					},
					"publisher": {
						"$ref": "#/components/schemas/IPublisher"
					}
				},
				"required": [
					"id",
					"creationDate",
					"updateDate",
					"user",
					"publisher"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IEntryId": {
				"properties": {
					"id": {
						"type": "string"
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_ISubscriptionKey.user-or-publisher_": {
				"properties": {
					"user": {
						"$ref": "#/components/schemas/IEntryId"
					},
					"publisher": {
						"$ref": "#/components/schemas/IEntryId"
					}
				},
				"required": [
					"user",
					"publisher"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"ISubscriptionKeyProps": {
				"$ref": "#/components/schemas/Pick_ISubscriptionKey.user-or-publisher_"
			},
			"Pick_IPublisherKey.userReference-or-groupReference-or-channelReference-or-referenceType_": {
				"properties": {
					"userReference": {
						"$ref": "#/components/schemas/IEntryId"
					},
					"groupReference": {
						"$ref": "#/components/schemas/IEntryId"
					},
					"channelReference": {
						"$ref": "#/components/schemas/IEntryId"
					},
					"referenceType": {
						"$ref": "#/components/schemas/IPublisherReferenceType"
					}
				},
				"required": [
					"userReference",
					"groupReference",
					"channelReference",
					"referenceType"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"IPublisherKeyProps": {
				"$ref": "#/components/schemas/Pick_IPublisherKey.userReference-or-groupReference-or-channelReference-or-referenceType_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "ulfx-api",
		"version": "0.1.0",
		"contact": {
			"name": "Karl Jahn"
		}
	},
	"paths": {
		"/User/{userId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/User": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IUser"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/User/create": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/CreateIUserProps"
							}
						}
					}
				}
			}
		},
		"/Subscription/{subscriptionId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ISubscription"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "subscriptionId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/Subscription": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/ISubscription"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/Subscription/create": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ISubscription"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISubscriptionKeyProps"
							}
						}
					}
				}
			}
		},
		"/Publisher/{publisherId}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPublisher"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "publisherId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/Publisher": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IPublisher"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/Publisher/create": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IPublisher"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IPublisherKeyProps"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}